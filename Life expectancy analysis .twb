<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='AB_NYC_2019' inline='true' name='federated.16c8tzq0kx9evo1chdmea1jzi8uz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='AB_NYC_2019' name='textscan.01uad1v1fc8iyi1bkqjcg0s8nw3s'>
            <connection class='textscan' directory='C:/Users/KAVIN/Downloads' filename='AB_NYC_2019.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.01uad1v1fc8iyi1bkqjcg0s8nw3s' name='AB_NYC_2019.csv' table='[AB_NYC_2019#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='host_id' ordinal='2' />
            <column datatype='string' name='host_name' ordinal='3' />
            <column datatype='string' name='neighbourhood_group' ordinal='4' />
            <column datatype='string' name='neighbourhood' ordinal='5' />
            <column datatype='real' name='latitude' ordinal='6' />
            <column datatype='real' name='longitude' ordinal='7' />
            <column datatype='string' name='room_type' ordinal='8' />
            <column datatype='integer' name='price' ordinal='9' />
            <column datatype='integer' name='minimum_nights' ordinal='10' />
            <column datatype='integer' name='number_of_reviews' ordinal='11' />
            <column datatype='date' name='last_review' ordinal='12' />
            <column datatype='real' name='reviews_per_month' ordinal='13' />
            <column datatype='integer' name='calculated_host_listings_count' ordinal='14' />
            <column datatype='integer' name='availability_365' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.01uad1v1fc8iyi1bkqjcg0s8nw3s' name='AB_NYC_2019.csv' table='[AB_NYC_2019#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='host_id' ordinal='2' />
            <column datatype='string' name='host_name' ordinal='3' />
            <column datatype='string' name='neighbourhood_group' ordinal='4' />
            <column datatype='string' name='neighbourhood' ordinal='5' />
            <column datatype='real' name='latitude' ordinal='6' />
            <column datatype='real' name='longitude' ordinal='7' />
            <column datatype='string' name='room_type' ordinal='8' />
            <column datatype='integer' name='price' ordinal='9' />
            <column datatype='integer' name='minimum_nights' ordinal='10' />
            <column datatype='integer' name='number_of_reviews' ordinal='11' />
            <column datatype='date' name='last_review' ordinal='12' />
            <column datatype='real' name='reviews_per_month' ordinal='13' />
            <column datatype='integer' name='calculated_host_listings_count' ordinal='14' />
            <column datatype='integer' name='availability_365' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_id]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>host_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[host_name]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>host_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood_group]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>neighbourhood_group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_nights]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>minimum_nights</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_reviews]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>number_of_reviews</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_review</remote-name>
            <remote-type>133</remote-type>
            <local-name>[last_review]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>last_review</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews_per_month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reviews_per_month]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>reviews_per_month</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated_host_listings_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated_host_listings_count]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>calculated_host_listings_count</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability_365</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability_365]</local-name>
            <parent-name>[AB_NYC_2019.csv]</parent-name>
            <remote-alias>availability_365</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='AB_NYC_2019.csv' datatype='table' name='[__tableau_internal_object_id__].[AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C]' role='measure' type='quantitative' />
      <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
      <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
      <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
      <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Last Review' datatype='date' name='[last_review]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
      <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
      <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Reviews Per Month' datatype='real' name='[reviews_per_month]' role='dimension' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='AB_NYC_2019.csv' id='AB_NYC_2019.csv_BD803DC31BB842ACB5AC6A7D59A8055C'>
            <properties context=''>
              <relation connection='textscan.01uad1v1fc8iyi1bkqjcg0s8nw3s' name='AB_NYC_2019.csv' table='[AB_NYC_2019#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='name' ordinal='1' />
                  <column datatype='integer' name='host_id' ordinal='2' />
                  <column datatype='string' name='host_name' ordinal='3' />
                  <column datatype='string' name='neighbourhood_group' ordinal='4' />
                  <column datatype='string' name='neighbourhood' ordinal='5' />
                  <column datatype='real' name='latitude' ordinal='6' />
                  <column datatype='real' name='longitude' ordinal='7' />
                  <column datatype='string' name='room_type' ordinal='8' />
                  <column datatype='integer' name='price' ordinal='9' />
                  <column datatype='integer' name='minimum_nights' ordinal='10' />
                  <column datatype='integer' name='number_of_reviews' ordinal='11' />
                  <column datatype='date' name='last_review' ordinal='12' />
                  <column datatype='real' name='reviews_per_month' ordinal='13' />
                  <column datatype='integer' name='calculated_host_listings_count' ordinal='14' />
                  <column datatype='integer' name='availability_365' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Life Expectancy Data' inline='true' name='federated.0lila6200rinig1auuspf1rsf723' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Life Expectancy Data' name='textscan.1tdvczx1kv6vxp1639fxf1khvo3i'>
            <connection class='textscan' directory='C:/Users/KAVIN/Data viz' filename='Life Expectancy Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1tdvczx1kv6vxp1639fxf1khvo3i' name='Life Expectancy Data.csv' table='[Life Expectancy Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Status' ordinal='2' />
            <column datatype='real' name='Life expectancy ' ordinal='3' />
            <column datatype='integer' name='Adult Mortality' ordinal='4' />
            <column datatype='integer' name='infant deaths' ordinal='5' />
            <column datatype='real' name='Alcohol' ordinal='6' />
            <column datatype='real' name='percentage expenditure' ordinal='7' />
            <column datatype='integer' name='Hepatitis B' ordinal='8' />
            <column datatype='integer' name='Measles ' ordinal='9' />
            <column datatype='real' name='BMI ' ordinal='10' />
            <column datatype='integer' name='under-five deaths ' ordinal='11' />
            <column datatype='integer' name='Polio' ordinal='12' />
            <column datatype='real' name='Total expenditure' ordinal='13' />
            <column datatype='integer' name='Diphtheria ' ordinal='14' />
            <column datatype='real' name='HIV/AIDS' ordinal='15' />
            <column datatype='real' name='GDP' ordinal='16' />
            <column datatype='integer' name='Population' ordinal='17' />
            <column datatype='real' name='thinness  1-19 years' ordinal='18' />
            <column datatype='real' name='thinness 5-9 years' ordinal='19' />
            <column datatype='real' name='Income composition of resources' ordinal='20' />
            <column datatype='real' name='Schooling' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1tdvczx1kv6vxp1639fxf1khvo3i' name='Life Expectancy Data.csv' table='[Life Expectancy Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Status' ordinal='2' />
            <column datatype='real' name='Life expectancy ' ordinal='3' />
            <column datatype='integer' name='Adult Mortality' ordinal='4' />
            <column datatype='integer' name='infant deaths' ordinal='5' />
            <column datatype='real' name='Alcohol' ordinal='6' />
            <column datatype='real' name='percentage expenditure' ordinal='7' />
            <column datatype='integer' name='Hepatitis B' ordinal='8' />
            <column datatype='integer' name='Measles ' ordinal='9' />
            <column datatype='real' name='BMI ' ordinal='10' />
            <column datatype='integer' name='under-five deaths ' ordinal='11' />
            <column datatype='integer' name='Polio' ordinal='12' />
            <column datatype='real' name='Total expenditure' ordinal='13' />
            <column datatype='integer' name='Diphtheria ' ordinal='14' />
            <column datatype='real' name='HIV/AIDS' ordinal='15' />
            <column datatype='real' name='GDP' ordinal='16' />
            <column datatype='integer' name='Population' ordinal='17' />
            <column datatype='real' name='thinness  1-19 years' ordinal='18' />
            <column datatype='real' name='thinness 5-9 years' ordinal='19' />
            <column datatype='real' name='Income composition of resources' ordinal='20' />
            <column datatype='real' name='Schooling' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy ]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Life expectancy </remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adult Mortality</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Adult Mortality]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Adult Mortality</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infant deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[infant deaths]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>infant deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alcohol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Alcohol]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Alcohol</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage expenditure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage expenditure]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>percentage expenditure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hepatitis B</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hepatitis B]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Hepatitis B</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measles </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measles ]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Measles </remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BMI </remote-name>
            <remote-type>5</remote-type>
            <local-name>[BMI ]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>BMI </remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>under-five deaths </remote-name>
            <remote-type>20</remote-type>
            <local-name>[under-five deaths ]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>under-five deaths </remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Polio</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Polio]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Polio</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total expenditure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total expenditure]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Total expenditure</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diphtheria </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Diphtheria ]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Diphtheria </remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIV/AIDS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HIV/AIDS]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>HIV/AIDS</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>thinness  1-19 years</remote-name>
            <remote-type>5</remote-type>
            <local-name>[thinness  1-19 years]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>thinness  1-19 years</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>thinness 5-9 years</remote-name>
            <remote-type>5</remote-type>
            <local-name>[thinness 5-9 years]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>thinness 5-9 years</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income composition of resources</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Income composition of resources]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Income composition of resources</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Schooling</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Schooling]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Schooling</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Bmi' datatype='real' name='[BMI ]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Diphtheria' datatype='integer' name='[Diphtheria ]' role='measure' type='quantitative' />
      <column caption='Hiv/Aids' datatype='real' name='[HIV/AIDS]' role='measure' type='quantitative' />
      <column caption='Life expectancy' datatype='real' name='[Life expectancy ]' role='measure' type='quantitative' />
      <column caption='Measles' datatype='integer' name='[Measles ]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Polio]' role='measure' type='quantitative' />
      <column datatype='string' name='[Status]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Life Expectancy Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842]' role='measure' type='quantitative' />
      <column caption='Infant Deaths' datatype='integer' name='[infant deaths]' role='measure' type='quantitative' />
      <column caption='Percentage Expenditure' datatype='real' name='[percentage expenditure]' role='measure' type='quantitative' />
      <column caption='Thinness  1-19 Years' datatype='real' name='[thinness  1-19 years]' role='measure' type='quantitative' />
      <column caption='Thinness 5-9 Years' datatype='real' name='[thinness 5-9 years]' role='measure' type='quantitative' />
      <column caption='Under-Five Deaths' datatype='integer' name='[under-five deaths ]' role='measure' type='quantitative' />
      <column-instance column='[Measles ]' derivation='Avg' name='[avg:Measles :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Polio]' derivation='Avg' name='[avg:Polio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Measles ]' derivation='Sum' name='[sum:Measles :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Polio]' derivation='Sum' name='[sum:Polio:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Status)' hidden='true' name='[Action (Country,Status)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Status]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Year)' hidden='true' name='[Action (Country,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723].[avg:Measles :qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723].[sum:Measles :qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723].[avg:Polio:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723].[sum:Polio:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The former Yugoslav republic of Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Status:nk]' palette='blue_red_brown_10_0' type='palette'>
            <map to='#466f9d'>
              <bucket>&quot;Developed&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;Developing&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Life Expectancy Data.csv' id='Life Expectancy Data.csv_AA2CEAA0BE7E4C6D867F570E64AFE842'>
            <properties context=''>
              <relation connection='textscan.1tdvczx1kv6vxp1639fxf1khvo3i' name='Life Expectancy Data.csv' table='[Life Expectancy Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='string' name='Status' ordinal='2' />
                  <column datatype='real' name='Life expectancy ' ordinal='3' />
                  <column datatype='integer' name='Adult Mortality' ordinal='4' />
                  <column datatype='integer' name='infant deaths' ordinal='5' />
                  <column datatype='real' name='Alcohol' ordinal='6' />
                  <column datatype='real' name='percentage expenditure' ordinal='7' />
                  <column datatype='integer' name='Hepatitis B' ordinal='8' />
                  <column datatype='integer' name='Measles ' ordinal='9' />
                  <column datatype='real' name='BMI ' ordinal='10' />
                  <column datatype='integer' name='under-five deaths ' ordinal='11' />
                  <column datatype='integer' name='Polio' ordinal='12' />
                  <column datatype='real' name='Total expenditure' ordinal='13' />
                  <column datatype='integer' name='Diphtheria ' ordinal='14' />
                  <column datatype='real' name='HIV/AIDS' ordinal='15' />
                  <column datatype='real' name='GDP' ordinal='16' />
                  <column datatype='integer' name='Population' ordinal='17' />
                  <column datatype='real' name='thinness  1-19 years' ordinal='18' />
                  <column datatype='real' name='thinness 5-9 years' ordinal='19' />
                  <column datatype='real' name='Income composition of resources' ordinal='20' />
                  <column datatype='real' name='Schooling' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Life Expectancy Data (2)' inline='true' name='federated.0lila6200rinig1auuspf1rsf723 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Life Expectancy Data' name='textscan.0apl6zc01jj8bj12nhunj1fk3af5'>
            <connection class='textscan' directory='C:/Users/KAVIN/Data viz' filename='Life Expectancy Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0apl6zc01jj8bj12nhunj1fk3af5' name='Life Expectancy Data.csv' table='[Life Expectancy Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Status' ordinal='2' />
            <column datatype='real' name='Life expectancy ' ordinal='3' />
            <column datatype='integer' name='Adult Mortality' ordinal='4' />
            <column datatype='integer' name='infant deaths' ordinal='5' />
            <column datatype='real' name='Alcohol' ordinal='6' />
            <column datatype='real' name='percentage expenditure' ordinal='7' />
            <column datatype='integer' name='Hepatitis B' ordinal='8' />
            <column datatype='integer' name='Measles ' ordinal='9' />
            <column datatype='real' name='BMI ' ordinal='10' />
            <column datatype='integer' name='under-five deaths ' ordinal='11' />
            <column datatype='integer' name='Polio' ordinal='12' />
            <column datatype='real' name='Total expenditure' ordinal='13' />
            <column datatype='integer' name='Diphtheria ' ordinal='14' />
            <column datatype='real' name='HIV/AIDS' ordinal='15' />
            <column datatype='real' name='GDP' ordinal='16' />
            <column datatype='integer' name='Population' ordinal='17' />
            <column datatype='real' name='thinness  1-19 years' ordinal='18' />
            <column datatype='real' name='thinness 5-9 years' ordinal='19' />
            <column datatype='real' name='Income composition of resources' ordinal='20' />
            <column datatype='real' name='Schooling' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0apl6zc01jj8bj12nhunj1fk3af5' name='Life Expectancy Data.csv' table='[Life Expectancy Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Status' ordinal='2' />
            <column datatype='real' name='Life expectancy ' ordinal='3' />
            <column datatype='integer' name='Adult Mortality' ordinal='4' />
            <column datatype='integer' name='infant deaths' ordinal='5' />
            <column datatype='real' name='Alcohol' ordinal='6' />
            <column datatype='real' name='percentage expenditure' ordinal='7' />
            <column datatype='integer' name='Hepatitis B' ordinal='8' />
            <column datatype='integer' name='Measles ' ordinal='9' />
            <column datatype='real' name='BMI ' ordinal='10' />
            <column datatype='integer' name='under-five deaths ' ordinal='11' />
            <column datatype='integer' name='Polio' ordinal='12' />
            <column datatype='real' name='Total expenditure' ordinal='13' />
            <column datatype='integer' name='Diphtheria ' ordinal='14' />
            <column datatype='real' name='HIV/AIDS' ordinal='15' />
            <column datatype='real' name='GDP' ordinal='16' />
            <column datatype='integer' name='Population' ordinal='17' />
            <column datatype='real' name='thinness  1-19 years' ordinal='18' />
            <column datatype='real' name='thinness 5-9 years' ordinal='19' />
            <column datatype='real' name='Income composition of resources' ordinal='20' />
            <column datatype='real' name='Schooling' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy ]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Life expectancy </remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adult Mortality</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Adult Mortality]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Adult Mortality</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infant deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[infant deaths]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>infant deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alcohol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Alcohol]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Alcohol</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage expenditure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage expenditure]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>percentage expenditure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hepatitis B</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hepatitis B]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Hepatitis B</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measles </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measles ]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Measles </remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BMI </remote-name>
            <remote-type>5</remote-type>
            <local-name>[BMI ]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>BMI </remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>under-five deaths </remote-name>
            <remote-type>20</remote-type>
            <local-name>[under-five deaths ]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>under-five deaths </remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Polio</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Polio]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Polio</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total expenditure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total expenditure]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Total expenditure</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diphtheria </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Diphtheria ]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Diphtheria </remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIV/AIDS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HIV/AIDS]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>HIV/AIDS</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>thinness  1-19 years</remote-name>
            <remote-type>5</remote-type>
            <local-name>[thinness  1-19 years]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>thinness  1-19 years</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>thinness 5-9 years</remote-name>
            <remote-type>5</remote-type>
            <local-name>[thinness 5-9 years]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>thinness 5-9 years</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income composition of resources</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Income composition of resources]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Income composition of resources</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Schooling</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Schooling]</local-name>
            <parent-name>[Life Expectancy Data.csv]</parent-name>
            <remote-alias>Schooling</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Alcohol]' role='measure' type='quantitative' />
      <column caption='Bmi' datatype='real' name='[BMI ]' role='measure' type='quantitative' />
      <column caption='Thinness' datatype='real' name='[Calculation_478507484770775041]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[thinness  1-19 years] + [thinness 5-9 years]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Diphtheria' datatype='integer' name='[Diphtheria ]' role='measure' type='quantitative' />
      <column caption='Hiv/Aids' datatype='real' name='[HIV/AIDS]' role='measure' type='quantitative' />
      <column caption='Life expectancy' datatype='real' name='[Life expectancy ]' role='measure' type='quantitative' />
      <column caption='Measles' datatype='integer' name='[Measles ]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Polio]' role='measure' type='quantitative' />
      <column datatype='string' name='[Status]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Life Expectancy Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D]' role='measure' type='quantitative' />
      <column caption='Infant Deaths' datatype='integer' name='[infant deaths]' role='measure' type='quantitative' />
      <column caption='Percentage Expenditure' datatype='real' name='[percentage expenditure]' role='measure' type='quantitative' />
      <column caption='Thinness  1-19 Years' datatype='real' name='[thinness  1-19 years]' role='measure' type='quantitative' />
      <column caption='Thinness 5-9 Years' datatype='real' name='[thinness 5-9 years]' role='measure' type='quantitative' />
      <column caption='Under-Five Deaths' datatype='integer' name='[under-five deaths ]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Life expectancy ]' derivation='Avg' name='[avg:Life expectancy :qk]' pivot='key' type='quantitative' />
      <column-instance column='[infant deaths]' derivation='Avg' name='[avg:infant deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Alcohol]' derivation='Sum' name='[sum:Alcohol:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Diphtheria ]' derivation='Sum' name='[sum:Diphtheria :qk]' pivot='key' type='quantitative' />
      <column-instance column='[HIV/AIDS]' derivation='Sum' name='[sum:HIV/AIDS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life expectancy ]' derivation='Sum' name='[sum:Life expectancy :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Measles ]' derivation='Sum' name='[sum:Measles :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Polio]' derivation='Sum' name='[sum:Polio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[thinness  1-19 years]' derivation='Sum' name='[sum:thinness  1-19 years:qk]' pivot='key' type='quantitative' />
      <column-instance column='[thinness 5-9 years]' derivation='Sum' name='[sum:thinness 5-9 years:qk]' pivot='key' type='quantitative' />
      <column-instance column='[thinness  1-19 years]' derivation='Var' name='[var:thinness  1-19 years:qk]' pivot='key' type='quantitative' />
      <column-instance column='[thinness 5-9 years]' derivation='Var' name='[var:thinness 5-9 years:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Status)' hidden='true' name='[Action (Country,Status)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Status]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Year)' hidden='true' name='[Action (Country,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Country,Status)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Status:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Status:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Developed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Developing&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The former Yugoslav republic of Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:infant deaths:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:Diphtheria :qk]:1&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:thinness  1-19 years:qk]&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[var:thinness 5-9 years:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:Polio:qk]&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[var:thinness  1-19 years:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:Life expectancy :qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:Alcohol:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:Measles :qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:HIV/AIDS:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Life expectancy :qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:Diphtheria :qk]&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:thinness 5-9 years:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Life Expectancy Data.csv' id='Life Expectancy Data.csv_EE076914BCFA4268913D135924135B0D'>
            <properties context=''>
              <relation connection='textscan.0apl6zc01jj8bj12nhunj1fk3af5' name='Life Expectancy Data.csv' table='[Life Expectancy Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='string' name='Status' ordinal='2' />
                  <column datatype='real' name='Life expectancy ' ordinal='3' />
                  <column datatype='integer' name='Adult Mortality' ordinal='4' />
                  <column datatype='integer' name='infant deaths' ordinal='5' />
                  <column datatype='real' name='Alcohol' ordinal='6' />
                  <column datatype='real' name='percentage expenditure' ordinal='7' />
                  <column datatype='integer' name='Hepatitis B' ordinal='8' />
                  <column datatype='integer' name='Measles ' ordinal='9' />
                  <column datatype='real' name='BMI ' ordinal='10' />
                  <column datatype='integer' name='under-five deaths ' ordinal='11' />
                  <column datatype='integer' name='Polio' ordinal='12' />
                  <column datatype='real' name='Total expenditure' ordinal='13' />
                  <column datatype='integer' name='Diphtheria ' ordinal='14' />
                  <column datatype='real' name='HIV/AIDS' ordinal='15' />
                  <column datatype='real' name='GDP' ordinal='16' />
                  <column datatype='integer' name='Population' ordinal='17' />
                  <column datatype='real' name='thinness  1-19 years' ordinal='18' />
                  <column datatype='real' name='thinness 5-9 years' ordinal='19' />
                  <column datatype='real' name='Income composition of resources' ordinal='20' />
                  <column datatype='real' name='Schooling' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0lila6200rinig1auuspf1rsf723 (copy)'>
      <datasources>
        <datasource caption='Life Expectancy Data (2)' name='federated.0lila6200rinig1auuspf1rsf723 (copy)' />
      </datasources>
      <datasource-dependencies datasource='federated.0lila6200rinig1auuspf1rsf723 (copy)' />
      <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Inclusions (Country,Status)]'>
        <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='union'>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[none:Status:nk]' member='&quot;Developed&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czechia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[none:Status:nk]' member='&quot;Developing&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Viet Nam&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[none:Country:nk]' />
            <hierarchy name='[none:Status:nk]' />
          </order>
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter10' name='[Action10_5A7B3966B8EA4528BA26BCFBDBC5E3A1]'>
      <activation auto-clear='true' />
      <source type='sheet' worksheet='thinness dual axis' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - LIFE EXPECTANCY' />
      </command>
    </action>
    <action caption='Filter1' name='[Action1_C0E1EC65E11B4D1EB0F613A66111607F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - LIFE EXPECTANCY' type='sheet' worksheet='infant and under five deaths' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - LIFE EXPECTANCY' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2_D94D83F60D4A4F57ACA1B6EA4BE393E9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - LIFE EXPECTANCY' type='sheet' worksheet='Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - LIFE EXPECTANCY' />
      </command>
    </action>
    <action caption='Filter3' name='[Action3_DCD1184E41884F1D8281D2642D3D0524]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - LIFE EXPECTANCY' type='sheet' worksheet='diseases' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - LIFE EXPECTANCY' />
      </command>
    </action>
    <action caption='Filter4' name='[Action4_4102AC359EB8453481D120748E86EA94]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - LIFE EXPECTANCY' type='sheet' worksheet='Thinness calc field' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - LIFE EXPECTANCY' />
      </command>
    </action>
    <action caption='Filter5' name='[Action5_9825E13322CC4EB1870D7B8D006A82E3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard - LIFE EXPECTANCY' type='sheet' worksheet='thinness dual axis' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - LIFE EXPECTANCY' />
      </command>
    </action>
    <action caption='Filter6' name='[Action6_84625906F6B34F50A6361B99201DEB73]'>
      <activation auto-clear='true' />
      <source type='sheet' worksheet='Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - LIFE EXPECTANCY' />
      </command>
    </action>
    <action caption='Filter7' name='[Action7_F79573EA6155403E8A3404C0B9E18707]'>
      <activation auto-clear='true' />
      <source type='sheet' worksheet='diseases' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - LIFE EXPECTANCY' />
      </command>
    </action>
    <action caption='Filter8' name='[Action8_B4AFA228A4F2484DAA29DB95CA0B7810]'>
      <activation auto-clear='true' />
      <source type='sheet' worksheet='infant and under five deaths' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - LIFE EXPECTANCY' />
      </command>
    </action>
    <action caption='Filter9' name='[Action9_746DD221C8CA4869B560C2E5112D5D2C]'>
      <activation auto-clear='true' />
      <source type='sheet' worksheet='Thinness calc field' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard - LIFE EXPECTANCY' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='10'>AVG LIFE EXPECTANCY OF COUNTRIES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Life Expectancy Data (2)' name='federated.0lila6200rinig1auuspf1rsf723 (copy)' />
            <datasource caption='Life Expectancy Data' name='federated.0lila6200rinig1auuspf1rsf723' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0lila6200rinig1auuspf1rsf723'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lila6200rinig1auuspf1rsf723 (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Life expectancy' datatype='real' name='[Life expectancy ]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Life expectancy ]' derivation='Avg' name='[avg:Life expectancy :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country,Status)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_4102AC359EB8453481D120748E86EA94]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Status]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_C0E1EC65E11B4D1EB0F613A66111607F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action5_9825E13322CC4EB1870D7B8D006A82E3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Viet Nam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
            </groupfilter>
            <target field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Country:nk]' />
          </filter>
          <slices>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country,Year)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country,Status)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Year)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Inclusions (Country,Status)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Longitude (generated)]' field-type='quantitative' max='15586457.303814404' min='-1463652.1294982475' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Latitude (generated)]' field-type='quantitative' max='8441888.8750874866' min='-1558256.2195179607' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Life expectancy :qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fc1154</color>
                <color>#f82562</color>
                <color>#f53a6f</color>
                <color>#f24e7c</color>
                <color>#ef6189</color>
                <color>#ec7496</color>
                <color>#e886a2</color>
                <color>#e597ae</color>
                <color>#e2a8b9</color>
                <color>#dfb9c4</color>
                <color>#dcc9ce</color>
                <color>#d9d9d9</color>
                <color>#c8c8dc</color>
                <color>#b7b7df</color>
                <color>#a5a5e3</color>
                <color>#9292e6</color>
                <color>#7f7fea</color>
                <color>#6c6ced</color>
                <color>#5757f1</color>
                <color>#4242f4</color>
                <color>#2d2df8</color>
                <color>#1616fb</color>
                <color>#0000ff</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Country:nk]' />
              <color column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Life expectancy :qk]' />
              <geometry column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Latitude (generated)]</rows>
        <cols>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AC90688A-7D93-41E2-A9C7-75B27526E6BA}' />
    </worksheet>
    <worksheet name='Thinness calc field'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='10'>THINNESS(CALC FIELD) VS COUNTRY AND STATUS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Life Expectancy Data (2)' name='federated.0lila6200rinig1auuspf1rsf723 (copy)' />
            <datasource caption='Life Expectancy Data' name='federated.0lila6200rinig1auuspf1rsf723' />
          </datasources>
          <datasource-dependencies datasource='federated.0lila6200rinig1auuspf1rsf723'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lila6200rinig1auuspf1rsf723 (copy)'>
            <column caption='Thinness' datatype='real' name='[Calculation_478507484770775041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[thinness  1-19 years] + [thinness 5-9 years]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_478507484770775041]' derivation='Avg' name='[avg:Calculation_478507484770775041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_478507484770775041]' derivation='Sum' name='[sum:Calculation_478507484770775041:qk]' pivot='key' type='quantitative' />
            <column caption='Thinness  1-19 Years' datatype='real' name='[thinness  1-19 years]' role='measure' type='quantitative' />
            <column caption='Thinness 5-9 Years' datatype='real' name='[thinness 5-9 years]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2_D94D83F60D4A4F57ACA1B6EA4BE393E9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_C0E1EC65E11B4D1EB0F613A66111607F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action5_9825E13322CC4EB1870D7B8D006A82E3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Developing&quot;</bucket>
              <bucket>&quot;Developed&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:Calculation_478507484770775041:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Viet Nam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
            </groupfilter>
            <target field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Country:nk]' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Calculation_478507484770775041:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Inclusions (Country,Status)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country,Year)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Year)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:Calculation_478507484770775041:qk]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Country:nk]' value='68' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Country:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Calculation_478507484770775041:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Calculation_478507484770775041:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:Calculation_478507484770775041:qk]</rows>
        <cols>([federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Status:nk] / [federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Country:nk])</cols>
      </table>
      <simple-id uuid='{B63B0CCF-6F3C-4ED8-9B4F-91F3AE934F21}' />
    </worksheet>
    <worksheet name='diseases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='10'>COUNTRY VS DISEASES</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Life Expectancy Data' name='federated.0lila6200rinig1auuspf1rsf723' />
          </datasources>
          <datasource-dependencies datasource='federated.0lila6200rinig1auuspf1rsf723'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Diphtheria' datatype='integer' name='[Diphtheria ]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Hepatitis B]' role='measure' type='quantitative' />
            <column caption='Measles' datatype='integer' name='[Measles ]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Polio]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Diphtheria ]' derivation='Sum' name='[sum:Diphtheria :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hepatitis B]' derivation='Sum' name='[sum:Hepatitis B:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Measles ]' derivation='Sum' name='[sum:Measles :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Polio]' derivation='Sum' name='[sum:Polio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2_D94D83F60D4A4F57ACA1B6EA4BE393E9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[Action (Country,Status)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_4102AC359EB8453481D120748E86EA94]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Status]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[Action (Country,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_C0E1EC65E11B4D1EB0F613A66111607F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action5_9825E13322CC4EB1870D7B8D006A82E3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Viet Nam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
            </groupfilter>
            <target field='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' />
          </filter>
          <manual-sort column='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[Action (Country,Year)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[Action (Country,Status)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[Action (Year)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[Action (Country)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lila6200rinig1auuspf1rsf723].[sum:Polio:qk]' field-type='quantitative' max='1675' min='-39' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0lila6200rinig1auuspf1rsf723].[sum:Measles :qk]' field-type='quantitative' max='795131' min='33684' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' value='30' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' value='68' />
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' value='3' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lila6200rinig1auuspf1rsf723].[none:Status:nk]' />
              <lod column='[federated.0lila6200rinig1auuspf1rsf723].[sum:Population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='293' />
                <format attr='maxwidth' value='293' />
                <format attr='aspect' value='0' />
                <format attr='minheight' value='400' />
                <format attr='maxheight' value='400' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lila6200rinig1auuspf1rsf723].[sum:Polio:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lila6200rinig1auuspf1rsf723].[none:Status:nk]' />
              <lod column='[federated.0lila6200rinig1auuspf1rsf723].[sum:Population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lila6200rinig1auuspf1rsf723].[sum:Measles :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0lila6200rinig1auuspf1rsf723].[none:Status:nk]' />
              <lod column='[federated.0lila6200rinig1auuspf1rsf723].[sum:Population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.4062983989715576' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lila6200rinig1auuspf1rsf723].[sum:Diphtheria :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lila6200rinig1auuspf1rsf723].[none:Status:nk]' />
              <lod column='[federated.0lila6200rinig1auuspf1rsf723].[sum:Population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lila6200rinig1auuspf1rsf723].[sum:Hepatitis B:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lila6200rinig1auuspf1rsf723].[none:Status:nk]' />
              <lod column='[federated.0lila6200rinig1auuspf1rsf723].[sum:Population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]</rows>
        <cols>([federated.0lila6200rinig1auuspf1rsf723].[sum:Polio:qk] + ([federated.0lila6200rinig1auuspf1rsf723].[sum:Measles :qk] + ([federated.0lila6200rinig1auuspf1rsf723].[sum:Diphtheria :qk] + [federated.0lila6200rinig1auuspf1rsf723].[sum:Hepatitis B:qk])))</cols>
      </table>
      <simple-id uuid='{F353E2E9-FCC0-4777-85EF-9234ADA7B789}' />
    </worksheet>
    <worksheet name='infant and under five deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='8'>INFANT DEATHS AND U5 DEATHS VS  YEAR AND COUNTRY</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Life Expectancy Data' name='federated.0lila6200rinig1auuspf1rsf723' />
          </datasources>
          <datasource-dependencies datasource='federated.0lila6200rinig1auuspf1rsf723'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Infant Deaths' datatype='integer' name='[infant deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[infant deaths]' derivation='Sum' name='[sum:infant deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[under-five deaths ]' derivation='Sum' name='[sum:under-five deaths :qk]' pivot='key' type='quantitative' />
            <column caption='Under-Five Deaths' datatype='integer' name='[under-five deaths ]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2_D94D83F60D4A4F57ACA1B6EA4BE393E9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[Action (Country,Status)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_4102AC359EB8453481D120748E86EA94]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Status]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[Action (Country,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_DCD1184E41884F1D8281D2642D3D0524]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action5_9825E13322CC4EB1870D7B8D006A82E3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Viet Nam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
            </groupfilter>
            <target field='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' />
          </filter>
          <slices>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[Action (Country,Year)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[Action (Country,Status)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[Action (Year)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[Action (Country)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0lila6200rinig1auuspf1rsf723].[sum:infant deaths:qk]' />
              <text column='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' />
              <text column='[federated.0lila6200rinig1auuspf1rsf723].[none:Year:qk]' />
              <color column='[federated.0lila6200rinig1auuspf1rsf723].[sum:under-five deaths :qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CFD8F784-CA0E-4DF8-9DA5-D2327F8381CA}' />
    </worksheet>
    <worksheet name='thinness dual axis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='10'>THINNESS DUAL AXIS VS YEAR</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Life Expectancy Data (2)' name='federated.0lila6200rinig1auuspf1rsf723 (copy)' />
            <datasource caption='Life Expectancy Data' name='federated.0lila6200rinig1auuspf1rsf723' />
          </datasources>
          <datasource-dependencies datasource='federated.0lila6200rinig1auuspf1rsf723'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lila6200rinig1auuspf1rsf723 (copy)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[thinness  1-19 years]' derivation='Sum' name='[sum:thinness  1-19 years:qk]' pivot='key' type='quantitative' />
            <column-instance column='[thinness 5-9 years]' derivation='Sum' name='[sum:thinness 5-9 years:qk]' pivot='key' type='quantitative' />
            <column caption='Thinness  1-19 Years' datatype='real' name='[thinness  1-19 years]' role='measure' type='quantitative' />
            <column caption='Thinness 5-9 Years' datatype='real' name='[thinness 5-9 years]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2_D94D83F60D4A4F57ACA1B6EA4BE393E9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country,Status)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_4102AC359EB8453481D120748E86EA94]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Status]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_C0E1EC65E11B4D1EB0F613A66111607F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Viet Nam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
            </groupfilter>
            <target field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Country:nk]' />
          </filter>
          <slices>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country,Year)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country,Status)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Action (Country)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Inclusions (Country,Status)]</column>
            <column>[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:thinness 5-9 years:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[:Measure Names]' value='center' />
            <format attr='text-orientation' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[:Measure Names]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:thinness  1-19 years:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.8785635232925415' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:thinness 5-9 years:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[:Measure Names]' />
              <text column='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:thinness 5-9 years:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3293370008468628' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:thinness  1-19 years:qk] + [federated.0lila6200rinig1auuspf1rsf723 (copy)].[sum:thinness 5-9 years:qk])</rows>
        <cols>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{6B8640F9-82BA-4B4D-ACBC-AB0E808D2B87}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard - LIFE EXPECTANCY'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='89378' x='483' y='940'>
              <zone h='49057' id='3' name='Country' w='44684' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49063' id='9' name='diseases' w='44684' x='483' y='49997'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49057' id='11' name='Thinness calc field' w='44694' x='45167' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49063' id='13' name='thinness dual axis' w='23131' x='45167' y='49997'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49063' id='15' name='infant and under five deaths' w='21563' x='68298' y='49997'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='940'>
              <zone h='8578' id='8' name='Country' pane-specification-id='2' param='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Life expectancy :qk]' type-v2='color' w='9656' x='89861' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8461' id='10' name='diseases' pane-specification-id='1' param='[federated.0lila6200rinig1auuspf1rsf723].[none:Status:nk]' type-v2='color' w='9656' x='89861' y='9518'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8578' id='12' name='Thinness calc field' pane-specification-id='6' param='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Calculation_478507484770775041:qk]' type-v2='color' w='9656' x='89861' y='17979'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8461' id='14' name='thinness dual axis' pane-specification-id='1' param='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[:Measure Names]' type-v2='color' w='9656' x='89861' y='26557'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8578' id='16' name='infant and under five deaths' pane-specification-id='0' param='[federated.0lila6200rinig1auuspf1rsf723].[sum:under-five deaths :qk]' type-v2='color' w='9656' x='89861' y='35018'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='42' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='41' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='280' h='49057' id='3' is-fixed='true' name='Country' w='44684' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='8' name='Country' pane-specification-id='2' param='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Life expectancy :qk]' type-v2='color' w='9656' x='89861' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49057' id='11' is-fixed='true' name='Thinness calc field' w='44694' x='45167' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='12' name='Thinness calc field' pane-specification-id='6' param='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Calculation_478507484770775041:qk]' type-v2='color' w='9656' x='89861' y='17979'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49063' id='9' is-fixed='true' name='diseases' w='44684' x='483' y='49997'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8461' id='10' name='diseases' pane-specification-id='1' param='[federated.0lila6200rinig1auuspf1rsf723].[none:Status:nk]' type-v2='color' w='9656' x='89861' y='9518'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49063' id='13' is-fixed='true' name='thinness dual axis' w='23131' x='45167' y='49997'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8461' id='14' name='thinness dual axis' pane-specification-id='1' param='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[:Measure Names]' type-v2='color' w='9656' x='89861' y='26557'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49063' id='15' is-fixed='true' name='infant and under five deaths' w='21563' x='68298' y='49997'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='16' name='infant and under five deaths' pane-specification-id='0' param='[federated.0lila6200rinig1auuspf1rsf723].[sum:under-five deaths :qk]' type-v2='color' w='9656' x='89861' y='35018'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5608FE73-88CC-4EBA-9673-63E3677E77B9}' />
    </dashboard>
    <dashboard name='Story- LIFE EXPECTANCY' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#1eed97' fontname='Tableau Bold'>STORY - LIFE EXPECTANCY ANALYSIS</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-title'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='5758' id='8' type-v2='title' w='99034' x='483' y='940'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92362' id='1' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='6698'>
              <zone fixed-size='277' h='9283' id='4' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99034' x='483' y='6698' />
              <zone h='83079' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99034' x='483' y='15981'>
                <flipboard active-id='6' nav-type='number' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='The dashboard gives us a visual representation of all the graphs in the same page. ' captured-sheet='Dashboard - LIFE EXPECTANCY' id='6'>
                      <capturedDeltas>
                        <worksheet name='Country'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Latitude (generated)]' field-type='quantitative' max='8223697.7808140088' min='201231.52231627388' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Longitude (generated)]' field-type='quantitative' max='18852253.016140278' min='-3456373.7912810193' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='The average thinness in India is higher than the other countries and it can also be seen that the Thinness in developing countries is greater than the developed countries.  ' captured-sheet='Thinness calc field' id='3' />
                    <story-point caption='The thinness of 5-9 years is higher in the year 2000 and lowest in the year 2011 whereas the thinness of 1-19 years is higher in the year 2002 and lowest in the year 2014. ' captured-sheet='thinness dual axis' id='4' />
                    <story-point caption='From the graph below it can be seen that the average life expectancy of Austria is the highest when compared to other countries and the life expectancy of Afghanistan is the least.' captured-sheet='Country' id='1'>
                      <capturedDeltas>
                        <worksheet name='Country'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Latitude (generated)]' field-type='quantitative' max='8648280.3751980066' min='-1736350.2568629431' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[Longitude (generated)]' field-type='quantitative' max='-22564982.613056172' min='-44345927.641162038' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='It ca be seen that as the year increases the number of polio,  measles, diphtheria and hepatitis B cases keeps decreasing in most of the Countries. ' captured-sheet='diseases' id='2' />
                    <story-point caption='It can be seen that India has the highest number of infant deaths and under five deaths  from 2000 - 2015. ' captured-sheet='infant and under five deaths' id='5' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{03AFBEF2-C11E-4FEE-B446-9F2F00ADFEF7}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='89'>
    <window class='worksheet' name='Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Life expectancy :qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Life expectancy :qk]</field>
            <field>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Country:nk]</field>
            <field>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{5C668A2F-C9C8-4E97-B19C-9B6F29937BCE}' />
    </window>
    <window class='worksheet' name='diseases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lila6200rinig1auuspf1rsf723].[none:Status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]</field>
            <field>[federated.0lila6200rinig1auuspf1rsf723].[none:Status:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE240A4B-1D28-4633-B11F-0BFCAC4C640F}' />
    </window>
    <window class='worksheet' name='Thinness calc field'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='6' param='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Calculation_478507484770775041:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[avg:Calculation_478507484770775041:qk]</field>
            <field>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Country:nk]</field>
            <field>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Status:nk]</field>
            <field>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{710B3E4F-749B-439A-999C-532A4A65F1E4}' />
    </window>
    <window class='worksheet' name='thinness dual axis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lila6200rinig1auuspf1rsf723 (copy)].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Country:nk]</field>
            <field>[federated.0lila6200rinig1auuspf1rsf723 (copy)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{005D6A6B-4323-48FD-B1EE-AB15F9B70977}' />
    </window>
    <window class='worksheet' name='infant and under five deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lila6200rinig1auuspf1rsf723].[sum:under-five deaths :qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0lila6200rinig1auuspf1rsf723].[none:Country:nk]</field>
            <field>[federated.0lila6200rinig1auuspf1rsf723].[none:Status:nk]</field>
            <field>[federated.0lila6200rinig1auuspf1rsf723].[none:Year:qk]</field>
            <field>[federated.0lila6200rinig1auuspf1rsf723].[sum:under-five deaths :qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{89994668-F88E-4996-ACF6-8D7EF2E70035}' />
    </window>
    <window class='dashboard' name='Dashboard - LIFE EXPECTANCY'>
      <viewpoints>
        <viewpoint name='Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Thinness calc field'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='diseases'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0lila6200rinig1auuspf1rsf723].[none:Status:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='infant and under five deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='thinness dual axis'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6DC00461-C6D2-44BD-8E0E-09E04EB76E7E}' />
    </window>
    <window class='dashboard' maximized='true' name='Story- LIFE EXPECTANCY'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{1C240335-4B8F-477F-93EA-3BC7D94316D8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard - LIFE EXPECTANCY' width='192'>
      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
      a+0DDPB/ZmKDcQWt+5EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story- LIFE EXPECTANCY' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Thinness calc field' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='diseases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='infant and under five deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='thinness dual axis' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
